@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix schema: <http://schema.org/> .
@prefix kg: <https://kg-football.vn/ontology#> .
@prefix res: <https://kg-football.vn/resource/> .

# Player Shape
kg:PlayerShape a sh:NodeShape ;
  sh:targetClass kg:Player ;
  sh:property [
    sh:path kg:name ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "Player must have exactly one name"@en ;
  ] ;
  sh:property [
    sh:path kg:birthDate ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:date ;
    sh:message "Player must have exactly one birth date"@en ;
  ] ;
  sh:property [
    sh:path kg:nationality ;
    sh:minCount 1 ;
    sh:class kg:Country ;
    sh:message "Player must have at least one nationality"@en ;
  ] ;
  sh:property [
    sh:path kg:birthPlace ;
    sh:class kg:City ;
    sh:message "Player birthPlace must be a City"@en ;
  ] ;
  sh:property [
    sh:path kg:playsFor ;
    sh:minCount 1 ;
    sh:class kg:Team ;
    sh:message "Player must play for at least one team"@en ;
  ] ;
  sh:property [
    sh:path kg:primaryPosition ;
    sh:class kg:Position ;
    sh:message "Player must have a primary position"@en ;
  ] ;
  sh:property [
    sh:path kg:shirtNumber ;
    sh:datatype xsd:positiveInteger ;
    sh:minInclusive 1 ;
    sh:maxInclusive 99 ;
    sh:message "Shirt number must be between 1 and 99"@en ;
  ] ;
  sh:property [
    sh:path kg:height ;
    sh:datatype xsd:decimal ;
    sh:minInclusive 1.0 ;
    sh:maxInclusive 2.5 ;
    sh:message "Height must be between 1.0 and 2.5 meters"@en ;
  ] ;
  sh:property [
    sh:path kg:weight ;
    sh:datatype xsd:decimal ;
    sh:minInclusive 40.0 ;
    sh:maxInclusive 150.0 ;
    sh:message "Weight must be between 40 and 150 kg"@en ;
  ] ;
  # people.ttl defines kg:preferredFoot both as DatatypeProperty and ObjectProperty.
  # Allow either a string or a kg:Footedness node.
  sh:property [
    sh:path kg:preferredFoot ;
    sh:or (
      [ sh:datatype xsd:string ]
      [ sh:class kg:Footedness ]
    ) ;
    sh:message "preferredFoot must be a string or a Footedness individual"@en ;
  ] ;
  sh:sparql [
    a sh:SPARQLConstraint ;
    sh:message "Player birth date must be in the past"@en ;
    sh:select """
      SELECT $this WHERE {
        $this kg:birthDate ?birthDate .
        FILTER(?birthDate > NOW())
      }
    """ ;
  ] .

# Team Shape
kg:TeamShape a sh:NodeShape ;
  sh:targetClass kg:Team ;
  sh:property [
    sh:path kg:teamName ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "Team must have exactly one official name"@en ;
  ] ;
  sh:property [
    sh:path kg:teamAbbreviation ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "Team abbreviation must be a string if present"@en ;
  ] ;
  sh:property [
    sh:path kg:hasCoach ;
    sh:maxCount 1 ;
    sh:class kg:Coach ;
    sh:message "hasCoach must point to a Coach"@en ;
  ] ;
  sh:property [
    sh:path kg:hasCaptain ;
    sh:maxCount 1 ;
    sh:class kg:Player ;
    sh:message "hasCaptain must point to a Player"@en ;
  ] ;
  sh:property [
    sh:path kg:participatesIn ;
    sh:class kg:Season ;
    sh:message "participatesIn must point to a Season"@en ;
  ] .

# Club Shape
kg:ClubShape a sh:NodeShape ;
  sh:targetClass kg:Club ;
  sh:property [
    sh:path kg:foundedDate ;
    sh:datatype xsd:date ;
    sh:message "Founded date must be a valid date"@en ;
  ] ;
  sh:property [
    sh:path kg:homeStadium ;
    sh:class kg:Stadium ;
    sh:maxCount 1 ;
    sh:message "Club can have at most one home stadium"@en ;
  ] ;
  sh:property [
    sh:path kg:hasOwner ;
    sh:maxCount 1 ;
    sh:class kg:Owner ;
    sh:message "hasOwner must point to an Owner"@en ;
  ] ;
  sh:sparql [
    a sh:SPARQLConstraint ;
    sh:message "Club founded date must be in the past"@en ;
    sh:select """
      SELECT $this WHERE {
        $this kg:foundedDate ?foundedDate .
        FILTER(?foundedDate > NOW())
      }
    """ ;
  ] .

# Stadium Shape
kg:StadiumShape a sh:NodeShape ;
  sh:targetClass kg:Stadium ;
  sh:property [
    sh:path kg:name ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "Stadium must have exactly one name"@en ;
  ] ;
  sh:property [
    sh:path kg:capacity ;
    sh:datatype xsd:positiveInteger ;
    sh:minInclusive 1000 ;
    sh:maxInclusive 200000 ;
    sh:message "Stadium capacity must be between 1,000 and 200,000"@en ;
  ] ;
  sh:property [
    sh:path kg:locatedIn ;
    sh:class kg:City ;
    sh:message "Stadium must be located in a city"@en ;
  ] .

# Match Shape
kg:MatchShape a sh:NodeShape ;
  sh:targetClass kg:Match ;
  sh:property [
    sh:path kg:homeTeam ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:class kg:Team ;
    sh:message "Match must have exactly one home team"@en ;
  ] ;
  sh:property [
    sh:path kg:awayTeam ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:class kg:Team ;
    sh:message "Match must have exactly one away team"@en ;
  ] ;
  sh:property [
    sh:path kg:venue ;
    sh:class kg:Stadium ;
    sh:message "Match venue must be a valid stadium"@en ;
  ] ;
  sh:property [
    sh:path kg:kickoffTime ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:dateTime ;
    sh:message "Match must have exactly one kickoff time"@en ;
  ] ;
  sh:property [
    sh:path kg:result ;
    sh:datatype xsd:string ;
    sh:message "Result must be a string (e.g., 2-1)"@en ;
  ] ;
  sh:property [
    sh:path kg:inCompetition ;
    sh:class kg:Competition ;
    sh:message "inCompetition must point to a Competition"@en ;
  ] ;
  sh:property [
    sh:path kg:inSeason ;
    sh:class kg:Season ;
    sh:message "inSeason must point to a Season"@en ;
  ] ;
  sh:property [
    sh:path kg:referee ;
    sh:maxCount 1 ;
    sh:class kg:Referee ;
    sh:message "referee must point to a Referee"@en ;
  ] ;
  sh:sparql [
    a sh:SPARQLConstraint ;
    sh:message "Home team must be different from away team"@en ;
    sh:select """
      SELECT $this WHERE {
        $this kg:homeTeam ?homeTeam ;
               kg:awayTeam ?awayTeam .
        FILTER(?homeTeam = ?awayTeam)
      }
    """ ;
  ] .

# Competition Shape
kg:CompetitionShape a sh:NodeShape ;
  sh:targetClass kg:Competition ;
  sh:property [
    sh:path kg:competitionName ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "Competition must have exactly one name"@en ;
  ] ;
  sh:property [
    sh:path kg:participantCount ;
    sh:datatype xsd:positiveInteger ;
    sh:message "participantCount must be a positive integer"@en ;
  ] ;
  sh:property [
    sh:path kg:heldIn ;
    sh:class kg:Country ;
    sh:message "heldIn must point to a Country"@en ;
  ] ;
  sh:property [
    sh:path kg:hasSeason ;
    sh:class kg:Season ;
    sh:message "hasSeason must point to a Season"@en ;
  ] .

# Season Shape
kg:SeasonShape a sh:NodeShape ;
  sh:targetClass kg:Season ;
  sh:property [
    sh:path kg:seasonOf ;
    sh:minCount 1 ;
    sh:class kg:Competition ;
    sh:message "Season must belong to a Competition via seasonOf"@en ;
  ] .

# Geo: City and Country Shapes
kg:CityShape a sh:NodeShape ;
  sh:targetClass kg:City ;
  sh:property [
    sh:path kg:name ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "City must have exactly one name"@en ;
  ] .

kg:CountryShape a sh:NodeShape ;
  sh:targetClass kg:Country ;
  sh:property [
    sh:path kg:name ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "Country must have exactly one name"@en ;
  ] .

# Organization and related roles
kg:OrganizationShape a sh:NodeShape ;
  sh:targetClass kg:Organization ;
  sh:property [
    sh:path kg:hasMember ;
    sh:class kg:Team ;
    sh:message "hasMember must point to a Team"@en ;
  ] ;
  sh:property [
    sh:path kg:organizes ;
    sh:class kg:Competition ;
    sh:message "organizes must point to a Competition"@en ;
  ] .

kg:OwnerShape a sh:NodeShape ;
  sh:targetClass kg:Owner ;
  sh:property [
    sh:path kg:owns ;
    sh:class kg:Club ;
    sh:message "owns must point to a Club"@en ;
  ] .

kg:CoachShape a sh:NodeShape ;
  sh:targetClass kg:Coach ;
  sh:property [
    sh:path kg:manages ;
    sh:class kg:Team ;
    sh:message "manages must point to a Team"@en ;
  ] .

kg:RefereeShape a sh:NodeShape ;
  sh:targetClass kg:Referee ;
  sh:property [
    sh:path kg:name ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "Referee must have exactly one name"@en ;
  ] .

kg:PositionShape a sh:NodeShape ;
  sh:targetClass kg:Position ;
  sh:property [
    sh:path kg:name ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "Position must have exactly one name"@en ;
  ] .